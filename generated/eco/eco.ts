// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class actionCreated extends ethereum.Event {
  get params(): actionCreated__Params {
    return new actionCreated__Params(this);
  }
}

export class actionCreated__Params {
  _event: actionCreated;

  constructor(event: actionCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get action_type(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get proof(): string {
    return this._event.parameters[3].value.toString();
  }

  get status(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class actionUpdated extends ethereum.Event {
  get params(): actionUpdated__Params {
    return new actionUpdated__Params(this);
  }
}

export class actionUpdated__Params {
  _event: actionUpdated;

  constructor(event: actionUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class treeCreated extends ethereum.Event {
  get params(): treeCreated__Params {
    return new treeCreated__Params(this);
  }
}

export class treeCreated__Params {
  _event: treeCreated;

  constructor(event: treeCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get no_of_trees(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get locations(): string {
    return this._event.parameters[2].value.toString();
  }

  get status(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class treeUpdated extends ethereum.Event {
  get params(): treeUpdated__Params {
    return new treeUpdated__Params(this);
  }
}

export class treeUpdated__Params {
  _event: treeUpdated;

  constructor(event: treeUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class userCreated extends ethereum.Event {
  get params(): userCreated__Params {
    return new userCreated__Params(this);
  }
}

export class userCreated__Params {
  _event: userCreated;

  constructor(event: userCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get trees(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get waste(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get actions(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get overall_score(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get score(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class userUpdatedActions extends ethereum.Event {
  get params(): userUpdatedActions__Params {
    return new userUpdatedActions__Params(this);
  }
}

export class userUpdatedActions__Params {
  _event: userUpdatedActions;

  constructor(event: userUpdatedActions) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get actions(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get overall_score(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get score(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class userUpdatedOverScore extends ethereum.Event {
  get params(): userUpdatedOverScore__Params {
    return new userUpdatedOverScore__Params(this);
  }
}

export class userUpdatedOverScore__Params {
  _event: userUpdatedOverScore;

  constructor(event: userUpdatedOverScore) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get overall_score(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class userUpdatedScore extends ethereum.Event {
  get params(): userUpdatedScore__Params {
    return new userUpdatedScore__Params(this);
  }
}

export class userUpdatedScore__Params {
  _event: userUpdatedScore;

  constructor(event: userUpdatedScore) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get score(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class userUpdatedTree extends ethereum.Event {
  get params(): userUpdatedTree__Params {
    return new userUpdatedTree__Params(this);
  }
}

export class userUpdatedTree__Params {
  _event: userUpdatedTree;

  constructor(event: userUpdatedTree) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get trees(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get overall_score(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get score(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class userUpdatedWaste extends ethereum.Event {
  get params(): userUpdatedWaste__Params {
    return new userUpdatedWaste__Params(this);
  }
}

export class userUpdatedWaste__Params {
  _event: userUpdatedWaste;

  constructor(event: userUpdatedWaste) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get waste(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get overall_score(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get score(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class wasteCreated extends ethereum.Event {
  get params(): wasteCreated__Params {
    return new wasteCreated__Params(this);
  }
}

export class wasteCreated__Params {
  _event: wasteCreated;

  constructor(event: wasteCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get weight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sorted(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get status(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class wasteUpdated extends ethereum.Event {
  get params(): wasteUpdated__Params {
    return new wasteUpdated__Params(this);
  }
}

export class wasteUpdated__Params {
  _event: wasteUpdated;

  constructor(event: wasteUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get confirmed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class eco__getContractDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }
}

export class eco__getUserDataResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get trees(): BigInt {
    return this[1].toBigInt();
  }

  get waste(): BigInt {
    return this[2].toBigInt();
  }

  get actions(): BigInt {
    return this[3].toBigInt();
  }

  get overall_score(): BigInt {
    return this[4].toBigInt();
  }

  get score(): BigInt {
    return this[5].toBigInt();
  }

  get user(): Address {
    return this[6].toAddress();
  }

  get last_action(): BigInt {
    return this[7].toBigInt();
  }
}

export class eco__getUserInfoResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get trees(): BigInt {
    return this[1].toBigInt();
  }

  get waste(): BigInt {
    return this[2].toBigInt();
  }

  get actions(): BigInt {
    return this[3].toBigInt();
  }

  get overall_score(): BigInt {
    return this[4].toBigInt();
  }

  get score(): BigInt {
    return this[5].toBigInt();
  }

  get user(): Address {
    return this[6].toAddress();
  }

  get last_action(): BigInt {
    return this[7].toBigInt();
  }
}

export class eco__userInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Address;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Address,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTrees(): BigInt {
    return this.value1;
  }

  getWaste(): BigInt {
    return this.value2;
  }

  getActions(): BigInt {
    return this.value3;
  }

  getOverall_score(): BigInt {
    return this.value4;
  }

  getScore(): BigInt {
    return this.value5;
  }

  getUser(): Address {
    return this.value6;
  }

  getLast_action(): BigInt {
    return this.value7;
  }
}

export class eco__usersDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Address;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Address,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTrees(): BigInt {
    return this.value1;
  }

  getWaste(): BigInt {
    return this.value2;
  }

  getActions(): BigInt {
    return this.value3;
  }

  getOverall_score(): BigInt {
    return this.value4;
  }

  getScore(): BigInt {
    return this.value5;
  }

  getUser(): Address {
    return this.value6;
  }

  getLast_action(): BigInt {
    return this.value7;
  }
}

export class eco extends ethereum.SmartContract {
  static bind(address: Address): eco {
    return new eco("eco", address);
  }

  adminToBool(param0: Address): boolean {
    let result = super.call("adminToBool", "adminToBool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_adminToBool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("adminToBool", "adminToBool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getContractData(): eco__getContractDataResult {
    let result = super.call(
      "getContractData",
      "getContractData():(uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new eco__getContractDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getContractData(): ethereum.CallResult<eco__getContractDataResult> {
    let result = super.tryCall(
      "getContractData",
      "getContractData():(uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new eco__getContractDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  getUserData(user: Address): eco__getUserDataResultValue0Struct {
    let result = super.call(
      "getUserData",
      "getUserData(address):((uint256,uint256,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromAddress(user)]
    );

    return changetype<eco__getUserDataResultValue0Struct>(result[0].toTuple());
  }

  try_getUserData(
    user: Address
  ): ethereum.CallResult<eco__getUserDataResultValue0Struct> {
    let result = super.tryCall(
      "getUserData",
      "getUserData(address):((uint256,uint256,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<eco__getUserDataResultValue0Struct>(value[0].toTuple())
    );
  }

  getUserInfo(id: BigInt): eco__getUserInfoResultValue0Struct {
    let result = super.call(
      "getUserInfo",
      "getUserInfo(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<eco__getUserInfoResultValue0Struct>(result[0].toTuple());
  }

  try_getUserInfo(
    id: BigInt
  ): ethereum.CallResult<eco__getUserInfoResultValue0Struct> {
    let result = super.tryCall(
      "getUserInfo",
      "getUserInfo(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<eco__getUserInfoResultValue0Struct>(value[0].toTuple())
    );
  }

  userCount(): BigInt {
    let result = super.call("userCount", "userCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_userCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("userCount", "userCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userInfo(param0: BigInt): eco__userInfoResult {
    let result = super.call(
      "userInfo",
      "userInfo(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new eco__userInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toAddress(),
      result[7].toBigInt()
    );
  }

  try_userInfo(param0: BigInt): ethereum.CallResult<eco__userInfoResult> {
    let result = super.tryCall(
      "userInfo",
      "userInfo(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new eco__userInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toAddress(),
        value[7].toBigInt()
      )
    );
  }

  usersData(param0: Address): eco__usersDataResult {
    let result = super.call(
      "usersData",
      "usersData(address):(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new eco__usersDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toAddress(),
      result[7].toBigInt()
    );
  }

  try_usersData(param0: Address): ethereum.CallResult<eco__usersDataResult> {
    let result = super.tryCall(
      "usersData",
      "usersData(address):(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new eco__usersDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toAddress(),
        value[7].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class AddPointCall extends ethereum.Call {
  get inputs(): AddPointCall__Inputs {
    return new AddPointCall__Inputs(this);
  }

  get outputs(): AddPointCall__Outputs {
    return new AddPointCall__Outputs(this);
  }
}

export class AddPointCall__Inputs {
  _call: AddPointCall;

  constructor(call: AddPointCall) {
    this._call = call;
  }

  get points(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddPointCall__Outputs {
  _call: AddPointCall;

  constructor(call: AddPointCall) {
    this._call = call;
  }
}

export class ConfirmActionCall extends ethereum.Call {
  get inputs(): ConfirmActionCall__Inputs {
    return new ConfirmActionCall__Inputs(this);
  }

  get outputs(): ConfirmActionCall__Outputs {
    return new ConfirmActionCall__Outputs(this);
  }
}

export class ConfirmActionCall__Inputs {
  _call: ConfirmActionCall;

  constructor(call: ConfirmActionCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get score(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ConfirmActionCall__Outputs {
  _call: ConfirmActionCall;

  constructor(call: ConfirmActionCall) {
    this._call = call;
  }
}

export class ConfirmTressCall extends ethereum.Call {
  get inputs(): ConfirmTressCall__Inputs {
    return new ConfirmTressCall__Inputs(this);
  }

  get outputs(): ConfirmTressCall__Outputs {
    return new ConfirmTressCall__Outputs(this);
  }
}

export class ConfirmTressCall__Inputs {
  _call: ConfirmTressCall;

  constructor(call: ConfirmTressCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get score(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ConfirmTressCall__Outputs {
  _call: ConfirmTressCall;

  constructor(call: ConfirmTressCall) {
    this._call = call;
  }
}

export class ConfirmWasteCall extends ethereum.Call {
  get inputs(): ConfirmWasteCall__Inputs {
    return new ConfirmWasteCall__Inputs(this);
  }

  get outputs(): ConfirmWasteCall__Outputs {
    return new ConfirmWasteCall__Outputs(this);
  }
}

export class ConfirmWasteCall__Inputs {
  _call: ConfirmWasteCall;

  constructor(call: ConfirmWasteCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get score(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ConfirmWasteCall__Outputs {
  _call: ConfirmWasteCall;

  constructor(call: ConfirmWasteCall) {
    this._call = call;
  }
}

export class DonateOrFundCall extends ethereum.Call {
  get inputs(): DonateOrFundCall__Inputs {
    return new DonateOrFundCall__Inputs(this);
  }

  get outputs(): DonateOrFundCall__Outputs {
    return new DonateOrFundCall__Outputs(this);
  }
}

export class DonateOrFundCall__Inputs {
  _call: DonateOrFundCall;

  constructor(call: DonateOrFundCall) {
    this._call = call;
  }
}

export class DonateOrFundCall__Outputs {
  _call: DonateOrFundCall;

  constructor(call: DonateOrFundCall) {
    this._call = call;
  }
}

export class GetPaidCall extends ethereum.Call {
  get inputs(): GetPaidCall__Inputs {
    return new GetPaidCall__Inputs(this);
  }

  get outputs(): GetPaidCall__Outputs {
    return new GetPaidCall__Outputs(this);
  }
}

export class GetPaidCall__Inputs {
  _call: GetPaidCall;

  constructor(call: GetPaidCall) {
    this._call = call;
  }

  get points(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GetPaidCall__Outputs {
  _call: GetPaidCall;

  constructor(call: GetPaidCall) {
    this._call = call;
  }
}

export class RegisterActionCall extends ethereum.Call {
  get inputs(): RegisterActionCall__Inputs {
    return new RegisterActionCall__Inputs(this);
  }

  get outputs(): RegisterActionCall__Outputs {
    return new RegisterActionCall__Outputs(this);
  }
}

export class RegisterActionCall__Inputs {
  _call: RegisterActionCall;

  constructor(call: RegisterActionCall) {
    this._call = call;
  }

  get action_type(): string {
    return this._call.inputValues[0].value.toString();
  }

  get desc(): string {
    return this._call.inputValues[1].value.toString();
  }

  get proof(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterActionCall__Outputs {
  _call: RegisterActionCall;

  constructor(call: RegisterActionCall) {
    this._call = call;
  }
}

export class RegisterTreesCall extends ethereum.Call {
  get inputs(): RegisterTreesCall__Inputs {
    return new RegisterTreesCall__Inputs(this);
  }

  get outputs(): RegisterTreesCall__Outputs {
    return new RegisterTreesCall__Outputs(this);
  }
}

export class RegisterTreesCall__Inputs {
  _call: RegisterTreesCall;

  constructor(call: RegisterTreesCall) {
    this._call = call;
  }

  get no_of_tress(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get locations(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterTreesCall__Outputs {
  _call: RegisterTreesCall;

  constructor(call: RegisterTreesCall) {
    this._call = call;
  }
}

export class RegisterWasteCall extends ethereum.Call {
  get inputs(): RegisterWasteCall__Inputs {
    return new RegisterWasteCall__Inputs(this);
  }

  get outputs(): RegisterWasteCall__Outputs {
    return new RegisterWasteCall__Outputs(this);
  }
}

export class RegisterWasteCall__Inputs {
  _call: RegisterWasteCall;

  constructor(call: RegisterWasteCall) {
    this._call = call;
  }

  get weight(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sorted(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class RegisterWasteCall__Outputs {
  _call: RegisterWasteCall;

  constructor(call: RegisterWasteCall) {
    this._call = call;
  }
}
